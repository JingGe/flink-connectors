/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

// val flinkVersion = "1.15-SNAPSHOT"
val flinkVersion = "1.14.0"

repositories {
    mavenLocal()
    mavenCentral()
    maven(url = uri("https://repo.maven.apache.org/maven2/"))
    maven(url = uri("https://repository.apache.org/snapshots"))
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.2")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1.1-jre")

    implementation("org.apache.flink:flink-core:${flinkVersion}")
    implementation("org.apache.flink:flink-annotations:${flinkVersion}")
    implementation("org.slf4j:slf4j-api:1.7.15")
    implementation("org.apache.flink:flink-connector-base:${flinkVersion}")
    implementation("org.apache.flink:flink-runtime:${flinkVersion}")
    // implementation("org.apache.flink:flink-docs:${flinkVersion}")
    implementation(project(":flink-connector-kafka"))
}

application {
    // Define the main class for the application.
    //mainClass.set("org.apache.flink.docs.configuration.App")
    mainClass.set("org.apache.flink.docs.configuration.ConfigOptionsDocGenerator")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

